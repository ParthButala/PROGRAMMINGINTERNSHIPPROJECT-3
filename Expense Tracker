import csv
import datetime

def add_expense():
    date = datetime.date.today()
    amount = input("Enter amount spent: ")
    category = input("Enter category (Food, Transport, Entertainment, etc.): ")
    description = input("Enter description: ")
    
    with open("expenses.csv", "a", newline="") as file:
        writer = csv.writer(file)
        writer.writerow([date, amount, category, description])
    
    print("Expense added successfully!\n")

def view_expenses():
    try:
        with open("expenses.csv", "r") as file:
            reader = csv.reader(file)
            print("Date        | Amount | Category       | Description")
            print("------------------------------------------------------")
            for row in reader:
                print(f"{row[0]} | {row[1]}     | {row[2]} | {row[3]}")
    except FileNotFoundError:
        print("No expenses recorded yet.\n")

def expense_summary():
    try:
        expenses = {}
        with open("expenses.csv", "r") as file:
            reader = csv.reader(file)
            for row in reader:
                category = row[2]
                amount = float(row[1])
                expenses[category] = expenses.get(category, 0) + amount
        
        print("Category-wise Expense Summary:")
        for category, total in expenses.items():
            print(f"{category}: ${total:.2f}")
    except FileNotFoundError:
        print("No expense data available to summarize.\n")

def main():
    while True:
        print("\nExpense Tracker")
        print("1. Add Expense")
        print("2. View Expenses")
        print("3. View Expense Summary")
        print("4. Exit")
        
        choice = input("Choose an option: ")
        
        if choice == "1":
            add_expense()
        elif choice == "2":
            view_expenses()
        elif choice == "3":
            expense_summary()
        elif choice == "4":
            print("Exiting Expense Tracker. Goodbye!")
            break
        else:
            print("Invalid choice. Please select a valid option.\n")

if __name__ == "__main__":
    main()
